[{"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\index.js":"1","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\App.jsx":"2","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\AppHeader\\AppHeader.jsx":"3","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\StatsHeader\\StatsHeader.jsx":"4","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\HomePage\\HomePage.jsx":"5","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\services\\cryptoService.js":"6","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\CurrenciesList\\CurrenciesList.jsx":"7","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\CurrencyPreview\\CurrencyPreview.jsx":"8","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\CurrencyDetails\\CurrencyDetails.jsx":"9","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Badge\\Badge.jsx":"10","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Scroll\\Scroll.jsx":"11","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Dropdown\\Dropdown.jsx":"12","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\Graphs\\Graphs.jsx":"13","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\RoutesBar\\RoutesBar.jsx":"14","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\HistoricalData\\HistoricalData.jsx":"15","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Description\\Description.jsx":"16","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Links\\Links.jsx":"17","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Trade\\Trade.jsx":"18","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Menus\\Menus.jsx":"19","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\MarketCap\\MarketCap.jsx":"20","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\OtherCurrencies\\OtherCurrencies.jsx":"21","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Search\\Search.jsx":"22","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\DisplayNum\\DisplayNum.jsx":"23","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\services\\localStorageService.js":"24","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\WatchList\\WatchList.jsx":"25","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\Exchanges\\Exchanges.jsx":"26","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\About\\About.jsx":"27","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\News\\News.jsx":"28","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Calculator\\Calculator.jsx":"29","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Sidebar\\Sidebar.jsx":"30","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Subscribe\\Subscribe.jsx":"31","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\AppFooter\\AppFooter.jsx":"32","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Chart\\Charts.jsx":"33","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\lib\\canvasjs.react.js":"34","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\lib\\canvasjs.min.js":"35","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\Contact\\Contact.jsx":"36","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\MobileNav\\MobileNav.jsx":"37"},{"size":237,"mtime":1611156640538,"results":"38","hashOfConfig":"39"},{"size":2368,"mtime":1612432932571,"results":"40","hashOfConfig":"39"},{"size":1477,"mtime":1612432879262,"results":"41","hashOfConfig":"39"},{"size":1702,"mtime":1612364473279,"results":"42","hashOfConfig":"39"},{"size":1447,"mtime":1612430439670,"results":"43","hashOfConfig":"39"},{"size":4024,"mtime":1612033643043,"results":"44","hashOfConfig":"39"},{"size":4004,"mtime":1612430941673,"results":"45","hashOfConfig":"39"},{"size":4275,"mtime":1612433088480,"results":"46","hashOfConfig":"39"},{"size":5635,"mtime":1612390018684,"results":"47","hashOfConfig":"39"},{"size":299,"mtime":1611244158067,"results":"48","hashOfConfig":"39"},{"size":339,"mtime":1611265887981,"results":"49","hashOfConfig":"39"},{"size":3357,"mtime":1612426933870,"results":"50","hashOfConfig":"39"},{"size":614,"mtime":1612189728725,"results":"51","hashOfConfig":"39"},{"size":1081,"mtime":1611611200389,"results":"52","hashOfConfig":"39"},{"size":2449,"mtime":1612424614563,"results":"53","hashOfConfig":"39"},{"size":1076,"mtime":1611592218174,"results":"54","hashOfConfig":"39"},{"size":1485,"mtime":1611594657354,"results":"55","hashOfConfig":"39"},{"size":3108,"mtime":1611871569904,"results":"56","hashOfConfig":"39"},{"size":3807,"mtime":1612432346855,"results":"57","hashOfConfig":"39"},{"size":4011,"mtime":1611870908701,"results":"58","hashOfConfig":"39"},{"size":1341,"mtime":1611752753046,"results":"59","hashOfConfig":"39"},{"size":537,"mtime":1611756528412,"results":"60","hashOfConfig":"39"},{"size":638,"mtime":1612431494899,"results":"61","hashOfConfig":"39"},{"size":271,"mtime":1611853846164,"results":"62","hashOfConfig":"39"},{"size":3404,"mtime":1611871165068,"results":"63","hashOfConfig":"39"},{"size":2367,"mtime":1612176689873,"results":"64","hashOfConfig":"39"},{"size":1015,"mtime":1612291186624,"results":"65","hashOfConfig":"39"},{"size":1418,"mtime":1612272553516,"results":"66","hashOfConfig":"39"},{"size":3432,"mtime":1612176747903,"results":"67","hashOfConfig":"39"},{"size":2596,"mtime":1612096524615,"results":"68","hashOfConfig":"39"},{"size":886,"mtime":1612174524263,"results":"69","hashOfConfig":"39"},{"size":1393,"mtime":1612383225205,"results":"70","hashOfConfig":"39"},{"size":3148,"mtime":1612385091620,"results":"71","hashOfConfig":"39"},{"size":1720,"mtime":1548856060000,"results":"72","hashOfConfig":"39"},{"size":459239,"mtime":1549622108000,"results":"73","hashOfConfig":"39"},{"size":975,"mtime":1612292225291,"results":"74","hashOfConfig":"39"},{"size":743,"mtime":1612432951994,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1vsxicj",{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"78"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"78"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\index.js",[],["174","175"],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\App.jsx",["176","177"],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\AppHeader\\AppHeader.jsx",["178","179"],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\StatsHeader\\StatsHeader.jsx",["180"],"\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './StatsHeader.scss';\r\nimport { MoonIcon } from '@primer/octicons-react';\r\nimport { useEffect } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\n\r\nexport default function StatsHeader() {\r\n    const [currenciesData, setCurrencies] = useState();\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            var currenciesNum = await cryptoService.globalStats();\r\n            setCurrencies(currenciesNum);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n \r\n\r\n    function formatNum(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    return (\r\n        <div className=\"stats-header-main\">\r\n\r\n            <div className=\"stats-header\">\r\n                {currenciesData &&\r\n                    <div className=\"stats\">\r\n                        <p>Cryptocurrencies: <span>{formatNum(currenciesData.data.active_cryptocurrencies)}</span></p>\r\n                        <p>Markets: <span>{formatNum(currenciesData.data.markets)}</span></p>\r\n                        <p>Market Cap: <span>\r\n                            {formatter.format(currenciesData.data.total_market_cap.usd)}\r\n                        </span></p>\r\n                        <p>24h Vol: <span>{formatter.format(currenciesData.data.total_volume.usd)}</span></p>\r\n                        <p>BTC Dominance: <span>{currenciesData.data.market_cap_percentage.btc.toFixed(2)}%</span></p>\r\n                    </div>\r\n                }\r\n\r\n\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\HomePage\\HomePage.jsx",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\services\\cryptoService.js",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\CurrenciesList\\CurrenciesList.jsx",["181","182"],"\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './CurrenciesList.scss';\r\nimport CurrencyPreview from './../CurrencyPreview/CurrencyPreview';\r\nimport DisplayNum from '../DisplayNum/DisplayNum';\r\nimport { TriangleDownIcon, TriangleUpIcon, StarIcon } from '@primer/octicons-react';\r\nimport { Link } from 'react-router-dom';\r\nimport loading from '../../assets/icons/loading.gif';\r\nimport Search from './../Search/Search';\r\n\r\nexport default function CurrenciesList({ currencies, numOfCurrencies, handleSort, startSort, updateRate, search }) {\r\n    var [toggleNameIcon, setToggleNameIcon] = useState(false);\r\n    var [togglePriceIcon, setTogglePriceIcon] = useState(false);\r\n    var [toggle24hIcon, setToggle24hIcon] = useState(false);\r\n    var [toggleMarketCapIcon, setToggleMarketCapIcon] = useState(false);\r\n    var [toggleVolumeIcon, setToggleVolumeIcon] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const sortBy = (data) => {\r\n        if (data === 'name') setToggleNameIcon(toggleNameIcon = !toggleNameIcon);\r\n        else if (data === 'price') setTogglePriceIcon(togglePriceIcon = !togglePriceIcon);\r\n        else if (data === '24h') setToggle24hIcon(toggle24hIcon = !toggle24hIcon);\r\n        else if (data === 'marketCap') setToggleMarketCapIcon(toggleMarketCapIcon = !toggleMarketCapIcon);\r\n        else if (data === 'volume') setToggleVolumeIcon(toggleVolumeIcon = !toggleVolumeIcon);\r\n        handleSort(data);\r\n    }\r\n\r\n\r\n    if (!currencies.length) return (\r\n        <div className=\"list\">\r\n            <div className=\"options\">\r\n                <div className=\"watch-link\"><Link to=\"/watch-list\"><StarIcon size={16} className=\"ics\" /> Watchlist</Link></div>\r\n                <div className=\"rows\"><DisplayNum numOfCurrencies={numOfCurrencies} /></div>\r\n            </div>\r\n            <div className=\"mobile-search\"><Search search={search} /></div>\r\n            <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n        </div>\r\n    )\r\n    else return (\r\n        <div className=\"list\">\r\n            <div className=\"options\">\r\n                <div className=\"watch-link\"><Link to=\"/watch-list\"><StarIcon size={16} className=\"ics\" /> Watchlist</Link></div>\r\n                <div className=\"rows\"><DisplayNum numOfCurrencies={numOfCurrencies} /></div>\r\n            </div>\r\n            <div className=\"mobile-search\"><Search search={search} /></div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>#Rank</th>\r\n                        <th onClick={() => sortBy(\"name\")}>Name\r\n                            {toggleNameIcon ? <TriangleDownIcon size={16} /> : <TriangleUpIcon size={16} />}\r\n                        </th>\r\n                        <th onClick={() => sortBy(\"price\")}>Price\r\n                            {togglePriceIcon ? <TriangleDownIcon size={16} /> : <TriangleUpIcon size={16} />}\r\n                        </th>\r\n                        <th onClick={() => sortBy(\"24h\")}>24h\r\n                            {toggle24hIcon ? <TriangleDownIcon size={16} /> : <TriangleUpIcon size={16} />}\r\n                        </th>\r\n                        <th onClick={() => sortBy(\"marketCap\")}>Market Cap\r\n                            {toggleMarketCapIcon ? <TriangleDownIcon size={16} /> : <TriangleUpIcon size={16} />}\r\n                        </th>\r\n                        <th onClick={() => sortBy(\"volume\")}>Volume\r\n                            {toggleVolumeIcon ? <TriangleDownIcon size={16} /> : <TriangleUpIcon size={16} />}\r\n                        </th>\r\n                        <th>Last 7 Days</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        currencies.map(currency =>\r\n                            <CurrencyPreview currency={currency} key={currency.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\CurrencyPreview\\CurrencyPreview.jsx",["183"],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\CurrencyDetails\\CurrencyDetails.jsx",["184","185","186","187","188","189"],"\r\n\r\n\r\nimport './CurrencyDetails.scss';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { cryptoService } from './../../services/cryptoService';\r\nimport Badge from '../../components/Badge/Badge';\r\nimport Dropdown from './../../components/Dropdown/Dropdown';\r\nimport RoutesBar from './../../components/RoutesBar/RoutesBar';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport HistoricalData from './../HistoricalData/HistoricalData';\r\nimport Graphs from './../Graphs/Graphs';\r\nimport loading from '../../assets/icons/loading.gif';\r\nimport Description from './../../components/Description/Description';\r\nimport Links from './../../components/Links/Links';\r\nimport Trade from './../../components/Trade/Trade';\r\nimport Menus from '../../components/Menus/Menus';\r\nimport MarketCap from '../../components/MarketCap/MarketCap';\r\nimport Scroll from '../../components/Scroll/Scroll';\r\n\r\n\r\nexport default function CurrencyDetails(props) {\r\n    const daysRef = useRef();\r\n    const [currency, setCurrency] = useState([]);\r\n    const [price, setPrice] = useState();\r\n    const [coin, setCoin] = useState(props.match.params.id);\r\n    const [last24h, setLast24h] = useState();\r\n    const [days, setDays] = useState(1);\r\n\r\n\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const currencyData = await cryptoService.loadCurrency(props.match.params.id);\r\n            const priceData = await cryptoService.loadCurrencyVsSupported(props.match.params.id, 'USD');\r\n            setCurrency(currencyData);\r\n            setPrice(priceData);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = await cryptoService.rateLast24h(props.match.params.id, days)\r\n            setLast24h(data);\r\n        }\r\n        fetchData();\r\n    }, [days])\r\n\r\n    const handleHistoryDays = () => {\r\n        setDays(daysRef.current.value);\r\n    }\r\n\r\n    if (!currency.name) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"det\">\r\n            <div className=\"currency-details-main\">\r\n                {currency.name && price && coin && last24h &&\r\n                    <div className=\"details-container\">\r\n\r\n\r\n                        <div className=\"currency-name\">\r\n                            <div className=\"title\">\r\n                                <img src={currency.image.small}></img>\r\n                                <h1>{currency.name}</h1>\r\n                            </div>\r\n                            <div className=\"badges\">\r\n                                <Badge name={\"Rank #\" + currency.market_cap_rank} bgc={'#7A7A7A'} color={'#fff'} />\r\n                                <Badge name={currency.symbol.toUpperCase()} bgc={'#DCDCDC'} color={'#606060'} />\r\n                                <Badge name={currency.categories[0]} bgc={'#DCDCDC'} color={'#606060'} />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"currency-price\">\r\n                            <p className=\"text-sm\">{coin} price ({currency.symbol.toUpperCase()})</p>\r\n\r\n                            <div className=\"price\">\r\n                                <h1>{formatter.format(price[coin].usd)}</h1>\r\n                                <h3 style={{ background: price[coin].usd_24h_change < 0 ? '#FF4343' : '#00BD1F' }}>\r\n                                    {price[coin].usd_24h_change.toFixed(2)}%</h3>\r\n                            </div>\r\n\r\n                            <div className=\"diff\">\r\n                                <p className=\"text-sm-2\">{currency.tickers[0].converted_last.btc} BTC</p>\r\n                                <p className=\"text-sm-2\">{currency.tickers[0].converted_last.eth} ETH</p>\r\n                            </div>\r\n\r\n                            <div className=\"high-low\">\r\n                                <p>Low: <span>{formatter.format(last24h.low.toFixed(2))}</span></p>\r\n                                <p>High: <span>{formatter.format(last24h.high.toFixed(2))}</span></p>\r\n                                <select name=\"days\" onChange={handleHistoryDays} ref={daysRef}>\r\n                                    <option className=\"option\" value=\"1\">24h</option>\r\n                                    <option className=\"option\" value=\"30\">1m</option>\r\n                                    <option className=\"option\" value=\"365\">1y</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <Dropdown {...props} />\r\n                    </div>\r\n                }\r\n                <div className=\"info\">\r\n                    <Menus {...props} currency={currency} />\r\n                    <MarketCap {...props} />\r\n                </div>\r\n            </div>\r\n            <RoutesBar {...props} />\r\n            <Switch>\r\n                <Route path=\"/currency/:id/historical-data\" component={HistoricalData}></Route>\r\n                <Route path=\"/currency/:id/description\" render={props => <Description {...props} />}></Route>\r\n                <Route path=\"/currency/:id/links\" render={props => <Links {...props} />}></Route>\r\n                <Route path=\"/currency/:id/trade\" render={props => <Trade {...props} />}></Route>\r\n                <Route path=\"/currency/:id\" render={props => <Graphs {...props} priceData={price} currencyData={currency}/>}></Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Badge\\Badge.jsx",["190"],"\r\n\r\nimport React from 'react';\r\nimport './Badge.scss';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function Badge(props) {\r\n    return (\r\n        <div className=\"badge\" style={{background:props.bgc}}>\r\n            <p style={{color:props.color}}>{props.name}</p>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Scroll\\Scroll.jsx",["191"],"import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Scroll({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default withRouter(Scroll);","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Dropdown\\Dropdown.jsx",["192","193"],"\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './Dropdown.scss';\r\nimport { TriangleDownIcon } from '@primer/octicons-react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\n\r\nexport default function Dropdown(props) {\r\n    const globalRef = useRef();\r\n    const [exchange, setExchange] = useState();\r\n    var [dropdown, setDropdown] = useState(false);\r\n    var [exchangesDropdown, setExchangesDropdown] = useState(false);\r\n    const [currency, setCurrency] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const exchangeData = await cryptoService.getExchanges();\r\n            const currencyData = await cryptoService.loadCurrency(props.match.params.id);\r\n            setCurrency(currencyData);\r\n            setExchange(exchangeData);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", onOutSideClick);\r\n    },[])\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdown(dropdown = !dropdown);\r\n        setExchangesDropdown(false);\r\n    }\r\n\r\n    const exchangesToggle = () => {\r\n        setExchangesDropdown(exchangesDropdown = !exchangesDropdown);\r\n        setDropdown(false);\r\n    }\r\n\r\n    const onOutSideClick = (ev) => {\r\n        if (globalRef.current && !globalRef.current.contains(ev.target)) {\r\n            setDropdown(false);\r\n            setExchangesDropdown(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div ref={globalRef}>\r\n            <div className=\"buttons\">\r\n                <button onClick={toggleDropdown}>Buy <TriangleDownIcon size={16} /></button>\r\n                <button>Markets <TriangleDownIcon size={16} /></button>\r\n                <button onClick={exchangesToggle}>Exchanges <TriangleDownIcon size={16} /></button>\r\n            </div>\r\n\r\n\r\n            {exchange &&\r\n                <div className=\"dropdown\" style={{ display: exchangesDropdown ? 'flex' : 'none' }}>\r\n                    {exchange.map(ex => {\r\n                        return (\r\n                            <div className=\"exhchanges-dropdown\" key={ex.name}>\r\n                                <div className=\"img\">\r\n                                    <img src={ex.image} alt=\"\" />\r\n                                    <h2><a href={ex.url}>{ex.name}</a>\r\n                                        <p>Established {ex.year_established}</p>\r\n                                        <p>Trust Score Rank #{ex.trust_score_rank} </p>\r\n                                    </h2>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n            {exchange &&\r\n                <div className=\"dropdown\" style={{ display: dropdown ? 'flex' : 'none' }}>\r\n                    <div className=\"logo\">\r\n                        <img src={exchange[0].image}></img>\r\n                        <h2>{exchange[0].name} Cryptocurrency Exchange</h2>\r\n                    </div>\r\n                    <div className=\"link\">\r\n                        <p>Obtain {currency.name} at {exchange[0].name} / The largest Cryptocurrency Exchange market</p>\r\n                        <button><a href={exchange[0].url}>{exchange[0].url}</a></button>\r\n                    </div>\r\n                </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\Graphs\\Graphs.jsx",["194"],"\r\n\r\nimport React from 'react';\r\nimport './Graphs.scss';\r\nimport Charts from './../../components/Chart/Charts';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport loading from '../../assets/icons/loading.gif';\r\n\r\nexport default function Graphs(props) {\r\n\r\n    if (!props.currencyData) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"graphs\">\r\n            <Charts {...props} />\r\n            <Sidebar currencyData={props.currencyData} priceData={props.priceData} {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// <Chart {...props} />","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\RoutesBar\\RoutesBar.jsx",["195","196"],"\r\n\r\n\r\nimport React, { useEffect } from 'react';\r\nimport './RoutesBar.scss';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport default function RoutesBar(props) {\r\n    return (\r\n        <div className=\"routes-bar\">\r\n            <div className=\"internal\">\r\n                <nav>\r\n                    <NavLink activeClassName='is-active' to={\"/currency/\" + props.match.params.id} exact={true}>Charts</NavLink>\r\n                    <NavLink activeClassName='is-active' to={\"/currency/\" + props.match.params.id + \"/trade\"} exact={true}>Trade</NavLink>\r\n                    <NavLink activeClassName='is-active' to={\"/currency/\" + props.match.params.id + \"/historical-data\"} exact={true}>Historical Data</NavLink>\r\n                    <NavLink activeClassName='is-active' to={\"/currency/\" + props.match.params.id + \"/description\"} exact={true}>Description</NavLink>\r\n                    <NavLink activeClassName='is-active' to={\"/currency/\" + props.match.params.id + \"/links\"} exact={true}>Links</NavLink>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\HistoricalData\\HistoricalData.jsx",["197","198"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\nimport './HistoricalData.scss';\r\nimport loading from '../../assets/icons/loading.gif';\r\n\r\n\r\n\r\nexport default function HistoricalData(props) {\r\n    const [history, setHistory] = useState();\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            var history = await cryptoService.historicalData(props.match.params.id, 100);\r\n            setHistory(history);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    if(!history) return <div className=\"loading\"><p>Loading...</p><img src={loading}/></div>\r\n    else return (\r\n        <div className=\"hd\">\r\n        <div className=\"historical-data\">\r\n            <h1 className=\"title\">Historical Data For {props.match.params.id}</h1>\r\n            <table className=\"history-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Date</th>\r\n                        <th>Highest Price(24h)</th>\r\n                        <th>Market Cap</th>\r\n                        <th>Volume</th>\r\n                    </tr>\r\n                </thead>\r\n                {history &&\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                {history.prices.map((day, idx) => <div key={day[0]}>{idx + 1}</div>)}\r\n                            </td>\r\n                            <td>\r\n                                {history.prices.map(day => <div key={day[0]}>{new Intl.DateTimeFormat('en-GB').format(day[0])}</div>)}\r\n                            </td>\r\n                            <td>\r\n                                {history.prices.map(day => <div key={day[0]}>{formatter.format(day[1])}</div>)}\r\n                            </td>\r\n                            <td>\r\n                                {history.market_caps.map(day => <div key={day[0]}>{formatter.format(day[1])}</div>)}\r\n                            </td>\r\n                            <td>\r\n                                {history.total_volumes.map(day => <div key={day[0]}>{formatter.format(day[1])}</div>)}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>}\r\n            </table>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Description\\Description.jsx",["199","200"],"\r\n\r\nimport React, { useState } from 'react';\r\nimport './Description.scss';\r\nimport { useEffect } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\nimport parse from 'html-react-parser';\r\nimport loading from '../../assets/icons/loading.gif';\r\n\r\n\r\nexport default function Description(props) {\r\n    const [currencyData, setCurrency] = useState();\r\n\r\n    useEffect(() => {\r\n        console.log(props);\r\n        const fetchData = async () => {\r\n            const currencyData = await cryptoService.loadCurrency(props.match.params.id);\r\n            setCurrency(currencyData);\r\n\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    if (!currencyData) return <div className=\"loading\"><p>Loading...</p><img src={loading}/></div>\r\n    else return (\r\n        <div className=\"description\">\r\n        <h1 className=\"title\">About {props.match.params.id}</h1>\r\n            <div className=\"inner\">\r\n                {currencyData &&\r\n                    parse(`<p>${currencyData.description.en}</p>`)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Links\\Links.jsx",["201","202"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Links.scss';\r\nimport loading from '../../assets/icons/loading.gif';\r\nimport { cryptoService } from '../../services/cryptoService';\r\n\r\nexport default function Links(props) {\r\n    const [currencyData, setCurrency] = useState();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const currencyData = await cryptoService.loadCurrency(props.match.params.id);\r\n            setCurrency(currencyData);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    if (!currencyData) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"links\">\r\n            {currencyData &&\r\n                <div className=\"inner\">\r\n                    <div className=\"inner-links\">\r\n                        <h1>Blockchain Explorers</h1>\r\n                        {currencyData.links.blockchain_site.map((site, idx) => {\r\n                            return (\r\n                                <a key={idx} href={site}>{site}</a>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className=\"website\">\r\n                        <h2>Official Website <a href={currencyData.links.homepage}>{currencyData.links.homepage}</a></h2>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n// <h1 className=\"title\">{props.match.params.id}'s Information Resources</h1>","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Trade\\Trade.jsx",["203","204"],"import React, { useEffect, useState } from 'react';\r\nimport './Trade.scss';\r\nimport loading from '../../assets/icons/loading.gif';\r\nimport defaultIcon from '../../assets/icons/bitbank.webp';\r\nimport { cryptoService } from '../../services/cryptoService';\r\nimport { LinkExternalIcon } from '@primer/octicons-react';\r\n\r\nexport default function Trade(props) {\r\n    const [currencyData, setCurrency] = useState();\r\n    const [exchanges, setExchanges] = useState();\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const currencyData = await cryptoService.loadCurrency(props.match.params.id);\r\n            const exchangesData = await cryptoService.getExchanges(100);\r\n            setCurrency(currencyData);\r\n            setExchanges(exchangesData);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    function exchangeImage(exchange) {\r\n        var res = exchanges.find(ex => ex.name.toLowerCase() === exchange.toLowerCase());\r\n        if (res) return res.image;\r\n        else return defaultIcon\r\n    }\r\n\r\n    if (!currencyData || !exchanges) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"trade\">\r\n            {currencyData &&\r\n                <div className=\"container\">\r\n                    {currencyData.tickers.map((pair, idx) => {\r\n                        return (\r\n                            <div key={idx} className=\"trade-item\">\r\n\r\n\r\n                                <img src={exchangeImage(pair.market.name)} alt=\"\" />\r\n\r\n                                <div className=\"inner\">\r\n                                    <p className=\"market\">{pair.market.name}</p>\r\n                                    <div>\r\n                                        <p className=\"pair\">{pair.target} / {pair.base.length > 4 ? pair.base.substring(0, 3) : pair.base}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p>Vol: {formatter.format(pair.volume)}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"vol\">\r\n                                    <p><span>BTC:</span> {pair.converted_volume.btc}</p>\r\n                                    <p><span>ETH:</span> {pair.converted_volume.eth}</p>\r\n                                    <p><span>USD:</span> {formatter.format(pair.converted_volume.usd)}</p>\r\n                                </div>\r\n\r\n                                <div className=\"redirect\">\r\n                                    <a href={pair.trade_url !== null ? pair.trade_url : 'Not Available'}>\r\n                                        {pair.trade_url !== null ? \"Trade\" : 'Not Available'} <LinkExternalIcon size={16} /></a>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Menus\\Menus.jsx",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\MarketCap\\MarketCap.jsx",["205","206","207","208","209"],"\r\n\r\nimport React, { useState } from 'react';\r\nimport './MarketCap.scss';\r\nimport loading from '../../assets/icons/loading.gif';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\n// { price, match, currency }\r\n\r\nexport default function MarketCap(props) {\r\n    const history = useHistory();\r\n    const [price, setPrice] = useState();\r\n    const [currency, setCurrency] = useState();\r\n\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n    function formatNum(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const currencyData = await cryptoService.loadCurrency(props.match.params.id);\r\n            const priceData = await cryptoService.loadCurrencyVsSupported(props.match.params.id, 'USD');\r\n            setPrice(priceData);\r\n            setCurrency(currencyData);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    if (!props.match.params.id) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    return (\r\n        <div className=\"market-cap\">\r\n            {price && currency && props.match.params.id &&\r\n                <div className=\"inner\">\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"badger\">\r\n                            <p className=\"title-info\">Price Change </p>\r\n                            <p className=\"semi-badge\">24h</p>\r\n                        </div>\r\n                        <p className=\"reg\">Current :{formatter.format(currency.market_data.current_price.usd)}</p>\r\n                        <p className=\"reg-1\" style={{ color: currency.market_data.price_change_24h < 0 ? '#FF4343' : '#00BD1F' }}>\r\n                            {formatter.format(currency.market_data.price_change_24h)}\r\n                        </p>\r\n                    </div>\r\n\r\n\r\n                    \r\n                    <div className=\"card\">\r\n                        <p className=\"title-info\">Market Cap</p>\r\n                        <p className=\"reg\">{formatter.format(price[props.match.params.id].usd_market_cap)}</p>\r\n                        <p className=\"reg-1\" style={{ color: price[props.match.params.id].usd_24h_change < 0 ? '#FF4343' : '#00BD1F' }}>\r\n                            {price[props.match.params.id].usd_24h_change.toFixed(2)}%\r\n                        </p>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"card\">\r\n                        <p className=\"title-info\">Circulating Supply</p>\r\n                        <p className=\"reg\">{currency.market_data.circulating_supply.toLocaleString()} {currency.symbol.toUpperCase()}</p>\r\n                        {currency.market_data.max_supply !== null &&\r\n                            <p className=\"reg\" className=\"title-info-sec\">\r\n                                Max Supply {formatNum(currency.market_data.max_supply)} {currency.symbol.toUpperCase()}\r\n                            </p>\r\n                        }\r\n                        {currency.market_data.max_supply === null &&\r\n                            <p className=\"reg\" className=\"title-info-sec\">Max Supply ---</p>\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"badger\">\r\n                            <p className=\"title-info\">Volume</p>\r\n                            <p className=\"semi-badge\">24h</p>\r\n                        </div>\r\n                        <p className=\"reg\">{formatter.format(price[props.match.params.id].usd_24h_vol)}</p>\r\n                        <p className=\"reg-1\" style={{ color: currency.market_data.price_change_24h < 0 ? '#FF4343' : '#00BD1F' }}>{currency.market_data.price_change_percentage_24h.toFixed(2)}%</p>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\OtherCurrencies\\OtherCurrencies.jsx",[],["210","211"],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Search\\Search.jsx",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\DisplayNum\\DisplayNum.jsx",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\services\\localStorageService.js",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\WatchList\\WatchList.jsx",["212","213","214","215"],"\r\n\r\nimport React, { useEffect } from 'react';\r\nimport './WatchList.scss';\r\nimport { useState } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\nimport Badge from '../../components/Badge/Badge';\r\nimport { TrashcanIcon,EyeIcon } from '@primer/octicons-react';\r\nimport { localStorageService } from '../../services/localStorageService';\r\nimport loading from '../../assets/icons/loading.gif';\r\n\r\nexport default function WatchList() {\r\n    const [currencies, setCurrencies] = useState();\r\n    var [remove, setDelete] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const currencyData = await cryptoService.loadWatchList();\r\n            setCurrencies(currencyData);\r\n        }\r\n        console.log(currencies);\r\n        fetchData();\r\n    }, [remove])\r\n\r\n\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n\r\n\r\n    const removeFromWatchList = (name) => {\r\n        var watchList = localStorageService.load('watchList');\r\n        var idx = watchList.findIndex(coin => coin === name);\r\n        watchList.splice(idx, 1);\r\n        localStorageService.save('watchList', watchList);\r\n        setDelete(remove = !remove);\r\n    }\r\n\r\n    if (!currencies || currencies.length === 0) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"watch-list\">\r\n        <h2>Watch List</h2>\r\n            {currencies &&\r\n                <div className=\"inner\">\r\n                    {currencies.map(currency => {\r\n                        return (\r\n                            <div key={currency.id} className=\"watchlist-item\">\r\n                                <div className=\"remove\" onClick={() => removeFromWatchList(currency.name)}><TrashcanIcon size={16} /></div>\r\n                                <div className=\"img-title\">\r\n                                    <img src={currency.image} />\r\n                                    <p>{currency.name}</p>\r\n                                    <p className=\"symbol\">{currency.symbol.toUpperCase()}</p>\r\n                                </div>\r\n                                <div className=\"price-div\">\r\n                                    <p className=\"price\">{formatter.format(currency.current_price)}</p>\r\n                                    <div className=\"badge-perc\">\r\n                                        <p style={{ color: currency.price_change_percentage_24h < 0 ? '#FF4343' : '#00BD1F' }}>\r\n                                            {currency.price_change_percentage_24h.toFixed(2)}%</p>\r\n                                        <Badge name={\"24h\"} bgc={\"#000000\"} color={\"#fff\"} className=\"badge\" />\r\n                                    </div>\r\n                                </div>\r\n                                <p >Price Change 24h: <span style={{ color: currency.price_change_percentage_24h < 0 ? '#FF4343' : '#00BD1F' }}>\r\n                                    {formatter.format(currency.price_change_24h)}</span></p>\r\n                                <p>Market Cap: {formatter.format(currency.market_cap)}</p>\r\n                                <p>Volume: {formatter.format(currency.total_volume)}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\Exchanges\\Exchanges.jsx",["216","217"],"\r\n\r\nimport React from 'react';\r\nimport './Exchanges.scss';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\nimport { LinkExternalIcon } from '@primer/octicons-react';\r\nimport loading from '../../assets/icons/loading.gif';\r\n\r\nexport default function Exchanges(props) {\r\n    const [exchanges, setExchanges] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const exchangesData = await cryptoService.getExchanges(100);\r\n            setExchanges(exchangesData);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    if (!exchanges) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"exchanges\">\r\n            <h3>Cryptocurrency Exchanges</h3>\r\n            {exchanges &&\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Exchange Score</th>\r\n                            <th>Volume 24h</th>\r\n                            <th>Established</th>\r\n                            <th>Country Operating</th>\r\n                            <th>URL</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {exchanges.map((exchange, idx) => {\r\n                            return (\r\n                                <tr key={idx} className=\"tr\">\r\n                                    <td>{idx + 1}</td>\r\n                                    <td className=\"title-img\"><img src={exchange.image} /> <p>{exchange.name}</p></td>\r\n                                    <td className=\"score\"><p>{exchange.trust_score}</p></td>\r\n                                    <td>{exchange.trade_volume_24h_btc.toFixed(2)} BTC</td>\r\n                                    <td>{exchange.year_established}</td>\r\n                                    <td>{exchange.country}</td>\r\n                                    <td className=\"url\"><a href={exchange.url}>{exchange.url} <LinkExternalIcon size={16} /></a></td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\About\\About.jsx",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\News\\News.jsx",["218"],"\r\n\r\nimport React, { useState } from 'react';\r\nimport './News.scss';\r\nimport { useEffect } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\nimport parse from 'html-react-parser';\r\nimport loading from '../../assets/icons/loading.gif';\r\n\r\nexport default function News() {\r\n    const [news, setNews] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const newsData = await cryptoService.getCryptoNews();\r\n            setNews(newsData.data);\r\n            console.log(newsData.data);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    if (!news) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"news\">\r\n            {news &&\r\n                <div className=\"inner\">\r\n                    {news.map(n => {\r\n                        return (\r\n                            <div key={n.id} className=\"content\">\r\n                                <h1>{n.title}</h1>\r\n                                <p className=\"author\">By {n.author.name} Published {n.published_at.toLocaleString()}</p>\r\n                                {n.content &&\r\n                                    parse(`<p>${n.content}</p>`)\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Calculator\\Calculator.jsx",["219","220"],"\r\n\r\nimport React, { useRef, useState } from 'react';\r\nimport './Calculator.scss'\r\nimport { useEffect } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\nimport loading from '../../assets/icons/loading.gif';\r\n\r\nexport default function Calculator() {\r\n    const [res, setRes] = useState();\r\n    const [x, setX] = useState(0);\r\n    const [currencies, setCurrencies] = useState();\r\n    const currencyOne = useRef('bitcoin');\r\n    const currencyTwo = useRef('eth');\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const currenciesData = await cryptoService.loadCurrencies(100);\r\n            setCurrencies(currenciesData);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        from();\r\n    }, [x])\r\n\r\n    const setMultiplier = (ev) => {\r\n        setX(+ev.target.value);\r\n    }\r\n\r\n    const from = async () => {\r\n        if (currencyOne.current.value && currencyTwo.current.value) {\r\n            var fromCurrency = await cryptoService.loadVsPrice(currencyOne.current.value, currencyTwo.current.value);\r\n            var val = fromCurrency[currencyOne.current.value.toLowerCase()][currencyTwo.current.value];\r\n            var res = x * val;\r\n            setRes(res); // NAMING ERROR //CURRENCY NAME FIX NEEDED\r\n        }\r\n        return res;\r\n    }\r\n\r\n    if (!currencies) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"calculator\">\r\n\r\n            {currencies &&\r\n                <div className=\"inner\">\r\n                    <h1>Exchange Calculator</h1>\r\n\r\n\r\n                    <div className=\"calc\">\r\n\r\n\r\n                        <div className=\"option-one\">\r\n                            <input type=\"number\" onChange={setMultiplier} defaultValue={1} />\r\n                            <select className=\"select\" name=\"currencyOne\" ref={currencyOne} onChange={from}>\r\n                                {currencies.map(currency => {\r\n                                    return (\r\n                                        <option key={currency.id}\r\n                                            value={currency.name}>\r\n                                            {currency.symbol.toUpperCase()}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"eq\">=</div>\r\n\r\n                        <div className=\"option-two\">\r\n                            <input type=\"text\" defaultValue={res} readOnly />\r\n                            <select className=\"select\" name=\"currencyOne\" ref={currencyTwo} onChange={from}>\r\n                                <option value=\"eth\">ETH</option>\r\n                                {currencies.map((currency) => {\r\n                                    return (\r\n                                        <option key={currency.id}\r\n                                            value={currency.symbol}>\r\n                                            {currency.symbol.toUpperCase()}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Sidebar\\Sidebar.jsx",["221"],"\r\n\r\nimport React from 'react';\r\nimport './Sidebar.scss';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function Sidebar({ currencyData, priceData ,match}) {\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(currencyData);\r\n        console.log(priceData);\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n\r\n\r\n\r\n\r\n            {currencyData && priceData &&\r\n                <div className=\"inner\">\r\n                    <h2>{currencyData.symbol.toUpperCase()} Price Statistics</h2>\r\n\r\n                    <div className=\"div\">\r\n                        <span>{currencyData.name} Price</span>\r\n                        <p>${priceData[match.params.id].usd.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"change div\">\r\n                        <span>Price Change 24h</span>\r\n                        <div className=\"change-items\">\r\n                            <p>${currencyData.market_data.price_change_24h.toLocaleString()}</p>\r\n                            <p style={{ color: priceData[match.params.id].usd_24h_change < 0 ? '#FF4343' : '#00BD1F' }}>\r\n                            {priceData[match.params.id].usd_24h_change.toFixed(2)}%</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <span>24h Low / 24h High</span>\r\n                        <p>${currencyData.market_data.low_24h.usd.toLocaleString()} / ${currencyData.market_data.high_24h.usd.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <span>Trading Volume 24h</span>\r\n                        <p>${priceData[match.params.id].usd_24h_vol.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <span>Market Rank</span>\r\n                        <p>#{currencyData.market_cap_rank}</p>\r\n                    </div>\r\n\r\n                    <div className=\"cap div\">\r\n                        <span>Market Cap</span>\r\n                        <div className=\"cap-items\">\r\n                            <p>${currencyData.market_data.market_cap.usd.toLocaleString()}</p>\r\n                            <p style={{ color: currencyData.market_data.market_cap_change_percentage_24h_in_currency.usd < 0 ? '#FF4343' : '#00BD1F' }}>\r\n                            {currencyData.market_data.market_cap_change_percentage_24h_in_currency.usd.toFixed(2)}%</p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Subscribe\\Subscribe.jsx",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\AppFooter\\AppFooter.jsx",["222","223","224","225","226","227","228","229","230"],"\r\n\r\nimport React from 'react';\r\nimport './AppFooter.scss';\r\nimport logo from '../../assets/icons/chart.png';\r\n\r\n\r\nexport default function AppFooter() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"inner\">\r\n\r\n\r\n                <div className=\"logo\">\r\n                    <img src={logo} />\r\n                    <h2>CryptoScan</h2>\r\n                </div>\r\n\r\n                <div>\r\n                    <ul>\r\n                    <li><h3>App</h3></li>\r\n                        <li><a href=\"\">Cryptocurrencies</a></li>\r\n                        <li><a href=\"\">Exchanges</a></li>\r\n                        <li><a href=\"\">Calculator</a></li>\r\n                        <li><a href=\"\">News</a></li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <ul>\r\n                    <li><h3>Contact Us</h3></li>\r\n                        <li><a href=\"\">About</a></li>\r\n                        <li><a href=\"\">Contact</a></li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                <ul>\r\n                <li><h3>Social</h3></li>\r\n                <li><a href=\"\"><i className=\"fab fa-github\"></i> Github</a></li>\r\n                <li><a href=\"\"><i className=\"fab fa-linkedin\"></i> Linkedin</a></li>\r\n                </ul>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\Chart\\Charts.jsx",["231","232"],"\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { cryptoService } from '../../services/cryptoService';\r\n// import { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport './Charts.scss';\r\nimport loading from '../../assets/icons/loading.gif';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\n\r\nexport default function Charts(props) {\r\n    const daysRef = useRef();\r\n    const [history, setHistory] = useState(null);\r\n    const [days, setDays] = useState(30);\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            var history = await cryptoService.historicalData(props.match.params.id, days);\r\n            setHistory(history);\r\n        }\r\n        fetchData();\r\n    }, [days])\r\n\r\n\r\n\r\n    const handleHistoryDays = () => {\r\n        setDays(+daysRef.current.value);\r\n    }\r\n\r\n\r\n    const getChartData = () => {\r\n        if (history.prices) {\r\n            var options = {\r\n                labels: history.prices.map(day => new Intl.DateTimeFormat('en-GB').format(day[0])),\r\n                datasets: [{\r\n                    label: 'Price',\r\n                    lineTension: 1,\r\n                    borderWidth: 1,\r\n                    fill: true,\r\n                    backgroundColor: 'rgba(100,181,246,0.5)',\r\n                    borderColor: '#0068FF',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [0],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: '#003AFF',\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 5,\r\n                    pointRadius: 2,\r\n                    pointHitRadius: 1,\r\n                    // maintainAspectRatio:false,\r\n                    // responsive:true,\r\n                    data: history.prices.map(day => day[1].toFixed(4)),\r\n                }]\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n\r\n    if (!history) return <div className=\"loading\"><p>Loading...</p><img src={loading} /></div>\r\n    else return (\r\n        <div className=\"chart\">\r\n            <div className=\"intro\">\r\n                <h2 className=\"title\">{props.match.params.id}'s Price chart</h2>\r\n                <select name=\"days\" onChange={handleHistoryDays} ref={daysRef}>\r\n                    <option className=\"option\" value=\"30\">30d</option>\r\n                    <option className=\"option\" value=\"90\">90d</option>\r\n                    <option className=\"option\" value=\"365\">1y</option>\r\n                    <option className=\"option\" value=\"1095\">3yrs</option>\r\n                    <option className=\"option\" value=\"2800\">All</option>\r\n                </select>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"tes\">\r\n                <Line data={getChartData}  width={900} height={650} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\lib\\canvasjs.react.js",[],["233","234"],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\lib\\canvasjs.min.js",[],"C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\pages\\Contact\\Contact.jsx",["235","236","237"],"\r\n\r\nimport React from 'react';\r\nimport './Contact.scss';\r\nimport linkedin from '../../assets/linkedin.png';\r\nimport github from '../../assets/github.png';\r\nimport gmail from '../../assets/gmail.png';\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div className=\"contact\">\r\n            <div className=\"inner\">\r\n                <div>\r\n                    <img src={linkedin} />\r\n                    <h1><a href=\"https://www.linkedin.com/in/andrey-dolya-250130203/\">Linkedin</a></h1>\r\n                </div>\r\n                <div>\r\n                    <img src={github} />\r\n                    <h1><a href=\"https://github.com/andreydolyaa?tab=repositories\">Github</a></h1>\r\n                </div>\r\n                <div>\r\n                    <img src={gmail} />\r\n                    <h1><a href=\"https://mail.google.com/mail/?view=cm&fs=1&to=dolya7kk@gmail.com&su=Hi Andrey!~\">Gmail</a></h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Desktop\\cryptocurrency-tracker\\src\\components\\MobileNav\\MobileNav.jsx",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":1,"column":10,"nodeType":"244","messageId":"245","endLine":1,"endColumn":19},{"ruleId":"242","severity":1,"message":"246","line":14,"column":8,"nodeType":"244","messageId":"245","endLine":14,"endColumn":17},{"ruleId":"242","severity":1,"message":"247","line":4,"column":17,"nodeType":"244","messageId":"245","endLine":4,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":9,"column":10,"nodeType":"244","messageId":"245","endLine":9,"endColumn":19},{"ruleId":"242","severity":1,"message":"248","line":6,"column":10,"nodeType":"244","messageId":"245","endLine":6,"endColumn":18},{"ruleId":"242","severity":1,"message":"247","line":4,"column":28,"nodeType":"244","messageId":"245","endLine":4,"endColumn":34},{"ruleId":"249","severity":1,"message":"250","line":41,"column":55,"nodeType":"251","endLine":41,"endColumn":76},{"ruleId":"249","severity":1,"message":"250","line":83,"column":17,"nodeType":"251","endLine":83,"endColumn":43},{"ruleId":"242","severity":1,"message":"252","line":19,"column":8,"nodeType":"244","messageId":"245","endLine":19,"endColumn":14},{"ruleId":"242","severity":1,"message":"253","line":26,"column":18,"nodeType":"244","messageId":"245","endLine":26,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":44,"column":8,"nodeType":"256","endLine":44,"endColumn":10,"suggestions":"257"},{"ruleId":"254","severity":1,"message":"255","line":52,"column":8,"nodeType":"256","endLine":52,"endColumn":14,"suggestions":"258"},{"ruleId":"249","severity":1,"message":"250","line":58,"column":74,"nodeType":"251","endLine":58,"endColumn":95},{"ruleId":"249","severity":1,"message":"250","line":68,"column":33,"nodeType":"251","endLine":68,"endColumn":65},{"ruleId":"242","severity":1,"message":"243","line":5,"column":10,"nodeType":"244","messageId":"245","endLine":5,"endColumn":19},{"ruleId":"254","severity":1,"message":"259","line":12,"column":6,"nodeType":"256","endLine":12,"endColumn":8,"suggestions":"260"},{"ruleId":"254","severity":1,"message":"255","line":24,"column":8,"nodeType":"256","endLine":24,"endColumn":10,"suggestions":"261"},{"ruleId":"249","severity":1,"message":"250","line":77,"column":25,"nodeType":"251","endLine":77,"endColumn":54},{"ruleId":"249","severity":1,"message":"250","line":11,"column":79,"nodeType":"251","endLine":11,"endColumn":100},{"ruleId":"242","severity":1,"message":"243","line":4,"column":17,"nodeType":"244","messageId":"245","endLine":4,"endColumn":26},{"ruleId":"242","severity":1,"message":"262","line":6,"column":10,"nodeType":"244","messageId":"245","endLine":6,"endColumn":14},{"ruleId":"254","severity":1,"message":"255","line":23,"column":8,"nodeType":"256","endLine":23,"endColumn":10,"suggestions":"263"},{"ruleId":"249","severity":1,"message":"250","line":25,"column":67,"nodeType":"251","endLine":25,"endColumn":87},{"ruleId":"254","severity":1,"message":"264","line":22,"column":8,"nodeType":"256","endLine":22,"endColumn":10,"suggestions":"265"},{"ruleId":"249","severity":1,"message":"250","line":24,"column":73,"nodeType":"251","endLine":24,"endColumn":93},{"ruleId":"254","severity":1,"message":"255","line":16,"column":8,"nodeType":"256","endLine":16,"endColumn":10,"suggestions":"266"},{"ruleId":"249","severity":1,"message":"250","line":18,"column":73,"nodeType":"251","endLine":18,"endColumn":94},{"ruleId":"254","severity":1,"message":"255","line":24,"column":8,"nodeType":"256","endLine":24,"endColumn":10,"suggestions":"267"},{"ruleId":"249","severity":1,"message":"250","line":32,"column":87,"nodeType":"251","endLine":32,"endColumn":108},{"ruleId":"242","severity":1,"message":"268","line":12,"column":11,"nodeType":"244","messageId":"245","endLine":12,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":32,"column":8,"nodeType":"256","endLine":32,"endColumn":10,"suggestions":"269"},{"ruleId":"249","severity":1,"message":"250","line":34,"column":82,"nodeType":"251","endLine":34,"endColumn":103},{"ruleId":"270","severity":1,"message":"271","line":66,"column":48,"nodeType":"272","endLine":66,"endColumn":74},{"ruleId":"270","severity":1,"message":"271","line":71,"column":48,"nodeType":"272","endLine":71,"endColumn":74},{"ruleId":"238","replacedBy":"273"},{"ruleId":"240","replacedBy":"274"},{"ruleId":"242","severity":1,"message":"275","line":8,"column":23,"nodeType":"244","messageId":"245","endLine":8,"endColumn":30},{"ruleId":"254","severity":1,"message":"276","line":23,"column":8,"nodeType":"256","endLine":23,"endColumn":16,"suggestions":"277"},{"ruleId":"249","severity":1,"message":"250","line":40,"column":98,"nodeType":"251","endLine":40,"endColumn":119},{"ruleId":"249","severity":1,"message":"250","line":51,"column":37,"nodeType":"251","endLine":51,"endColumn":65},{"ruleId":"249","severity":1,"message":"250","line":22,"column":70,"nodeType":"251","endLine":22,"endColumn":91},{"ruleId":"249","severity":1,"message":"250","line":44,"column":63,"nodeType":"251","endLine":44,"endColumn":91},{"ruleId":"249","severity":1,"message":"250","line":22,"column":65,"nodeType":"251","endLine":22,"endColumn":86},{"ruleId":"254","severity":1,"message":"278","line":28,"column":8,"nodeType":"256","endLine":28,"endColumn":11,"suggestions":"279"},{"ruleId":"249","severity":1,"message":"250","line":44,"column":71,"nodeType":"251","endLine":44,"endColumn":92},{"ruleId":"254","severity":1,"message":"280","line":14,"column":8,"nodeType":"256","endLine":14,"endColumn":10,"suggestions":"281"},{"ruleId":"249","severity":1,"message":"250","line":15,"column":21,"nodeType":"251","endLine":15,"endColumn":39},{"ruleId":"282","severity":1,"message":"283","line":22,"column":29,"nodeType":"251","endLine":22,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":23,"column":29,"nodeType":"251","endLine":23,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":24,"column":29,"nodeType":"251","endLine":24,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":25,"column":29,"nodeType":"251","endLine":25,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":33,"column":29,"nodeType":"251","endLine":33,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":34,"column":29,"nodeType":"251","endLine":34,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":42,"column":21,"nodeType":"251","endLine":42,"endColumn":32},{"ruleId":"282","severity":1,"message":"283","line":43,"column":21,"nodeType":"251","endLine":43,"endColumn":32},{"ruleId":"254","severity":1,"message":"255","line":24,"column":8,"nodeType":"256","endLine":24,"endColumn":14,"suggestions":"284"},{"ruleId":"249","severity":1,"message":"250","line":67,"column":68,"nodeType":"251","endLine":67,"endColumn":89},{"ruleId":"238","replacedBy":"285"},{"ruleId":"240","replacedBy":"286"},{"ruleId":"249","severity":1,"message":"250","line":14,"column":21,"nodeType":"251","endLine":14,"endColumn":43},{"ruleId":"249","severity":1,"message":"250","line":18,"column":21,"nodeType":"251","endLine":18,"endColumn":41},{"ruleId":"249","severity":1,"message":"250","line":22,"column":21,"nodeType":"251","endLine":22,"endColumn":40},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Subscribe' is defined but never used.","'useRef' is defined but never used.","'MoonIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Scroll' is defined but never used.","'setCoin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["289"],["290"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["291"],["292"],"'Link' is defined but never used.",["293"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["294"],["295"],["296"],"'history' is assigned a value but never used.",["297"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["287"],["288"],"'EyeIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'currencies'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has a missing dependency: 'from'. Either include it or remove the dependency array.",["299"],"React Hook useEffect has missing dependencies: 'currencyData' and 'priceData'. Either include them or remove the dependency array.",["300"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["301"],["287"],["288"],"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"302","fix":"308"},{"desc":"302","fix":"309"},{"desc":"310","fix":"311"},{"desc":"302","fix":"312"},{"desc":"302","fix":"313"},{"desc":"302","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"304","fix":"321"},"Update the dependencies array to be: [props.match.params.id]",{"range":"322","text":"323"},"Update the dependencies array to be: [days, props.match.params.id]",{"range":"324","text":"325"},"Update the dependencies array to be: [history]",{"range":"326","text":"327"},{"range":"328","text":"323"},{"range":"329","text":"323"},"Update the dependencies array to be: [props]",{"range":"330","text":"331"},{"range":"332","text":"323"},{"range":"333","text":"323"},{"range":"334","text":"323"},"Update the dependencies array to be: [currencies, remove]",{"range":"335","text":"336"},"Update the dependencies array to be: [from, x]",{"range":"337","text":"338"},"Update the dependencies array to be: [currencyData, priceData]",{"range":"339","text":"340"},{"range":"341","text":"325"},[1731,1733],"[props.match.params.id]",[1960,1966],"[days, props.match.params.id]",[274,276],"[history]",[864,866],[658,660],[641,643],"[props]",[529,531],[931,933],[1080,1082],[813,821],"[currencies, remove]",[775,778],"[from, x]",[271,273],"[currencyData, priceData]",[774,780]]